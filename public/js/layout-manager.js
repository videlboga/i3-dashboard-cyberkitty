/**
 * üéØ Layout Manager v26 - CyberKitty Dashboard
 * üí° –ü–†–û–°–¢–û–ï –†–ï–®–ï–ù–ò–ï: 
 * üîí –í–Ω–µ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - —Ä–∞–∑–º–µ—Ä—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã
 * ‚úèÔ∏è –í —Ä–µ–∂–∏–º–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è - –ø–æ–ª–Ω–∞—è —Å–≤–æ–±–æ–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
 * üíæ –ü—Ä–∏ –≤—ã—Ö–æ–¥–µ - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
 */
class LayoutManager {
    constructor() {
        this.isDragMode = false;
        this.draggedElement = null;
        this.dragOffset = { x: 0, y: 0 };
        this.widgets = [];
        this.gridSize = { width: 100, height: 80 }; // –†–∞–∑–º–µ—Ä —è—á–µ–π–∫–∏ —Å–µ—Ç–∫–∏
        this.defaultPositions = {
            'pomodoro-section': { top: 8, left: 8 },
            'system-section': { top: 8, left: 316 },
            'calendar-section': { top: 8, left: 624 },
            'processes-section': { top: 8, left: 932 },
            'docker-section': { top: 256, left: 8 },
            'ssh-section': { top: 256, left: 316 }
        };
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
        this.boundHandlers = {
            dragStart: (e) => this.handleDragStart(e),
            dragEnd: (e) => this.handleDragEnd(e),
            mouseMove: (e) => this.handleMouseMove(e),
            mouseUp: (e) => this.handleMouseUp(e)
        };
        
        this.init();
    }

    init() {
        console.log('üöÄ [Layout Manager v26] –ü–†–û–°–¢–û–ï –†–ï–®–ï–ù–ò–ï');
        console.log('üîí [v26] –†–∞–∑–º–µ—Ä—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –¥–æ —Ä–µ–∂–∏–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
        
        this.setupEventListeners();
        this.loadLayout();
        this.updateWidgetsList();
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –º–∞–∫–µ—Ç –∏ –±–ª–æ–∫–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä—ã
        setTimeout(() => {
            this.applyLayout();
            this.lockAllWidgets();
        }, 500);
        
        console.log('‚úÖ [v26] Layout Manager –≥–æ—Ç–æ–≤');
    }

    lockAllWidgets() {
        console.log('üîí [v26] –ë–ª–æ–∫–∏—Ä—É—é —Ä–∞–∑–º–µ—Ä—ã –≤—Å–µ—Ö –≤–∏–¥–∂–µ—Ç–æ–≤...');
        
        this.widgets.forEach(widget => {
            // –£–±–∏—Ä–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
            widget.style.resize = 'none';
            widget.style.overflow = 'visible';
            
            // –£–±–∏—Ä–∞–µ–º max-width/max-height —á—Ç–æ–±—ã –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—Ç—å
            widget.style.maxWidth = '';
            widget.style.maxHeight = '';
            
            console.log(`üîí [v26] –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω: ${widget.id}`);
        });
        
        console.log('‚úÖ [v26] –í—Å–µ –≤–∏–¥–∂–µ—Ç—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã');
    }

    unlockAllWidgets() {
        console.log('üîì [v26] –†–∞–∑–±–ª–æ–∫–∏—Ä—É—é —Ä–∞–∑–º–µ—Ä—ã –≤—Å–µ—Ö –≤–∏–¥–∂–µ—Ç–æ–≤...');
        
        this.widgets.forEach(widget => {
            // –í–∫–ª—é—á–∞–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
            widget.style.resize = 'both';
            widget.style.overflow = 'auto';
            
            console.log(`üîì [v26] –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω: ${widget.id}`);
        });
        
        console.log('‚úÖ [v26] –í—Å–µ –≤–∏–¥–∂–µ—Ç—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    }

    setupEventListeners() {
        console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π...');
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–µ–ø–µ—Ä—å –≤ system.js, –∑–¥–µ—Å—å —Ç–æ–ª—å–∫–æ –∫–ª–∞–≤–∏—à–∏
        
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && this.isDragMode) {
                this.toggleDragMode();
            }
        });
    }

    updateWidgetsList() {
        this.widgets = Array.from(document.querySelectorAll('.widget'));
        console.log(`üéØ –ù–∞–π–¥–µ–Ω–æ –≤–∏–¥–∂–µ—Ç–æ–≤: ${this.widgets.length}`);
    }

    toggleDragMode() {
        this.isDragMode = !this.isDragMode;
        const toggleBtn = document.getElementById('enable-drag-mode');
        
        if (this.isDragMode) {
            this.enableDragMode();
            if (toggleBtn) {
                toggleBtn.textContent = 'üîí –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞—Ç—å –º–∞–∫–µ—Ç';
                toggleBtn.classList.add('drag-active');
            }
            console.log('üéØ –†–µ–∂–∏–º –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –≤–∫–ª—é—á—ë–Ω');
        } else {
            this.disableDragMode();
            if (toggleBtn) {
                toggleBtn.textContent = 'üéØ –†–µ–∂–∏–º –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è';
                toggleBtn.classList.remove('drag-active');
            }
            console.log('üéØ –†–µ–∂–∏–º –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω');
        }
    }

    enableDragMode() {
        console.log('üöÄ [v26] –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è...');
        this.isDragMode = true;
        this.updateWidgetsList();
        
        // üîì –†–ê–ó–ë–õ–û–ö–ò–†–£–ï–ú –≤—Å–µ –≤–∏–¥–∂–µ—Ç—ã –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        this.unlockAllWidgets();
        
        console.log('üéØ [v26] –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∏–¥–∂–µ—Ç—ã:', this.widgets.length);
        
        // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
        const savedLayout = localStorage.getItem('cyberkitty_dashboard_layout');
        let layout = {};
        try {
            layout = savedLayout ? JSON.parse(savedLayout) : {};
        } catch (e) {
            console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –º–∞–∫–µ—Ç–∞:', e);
        }
        
        this.widgets.forEach((widget, index) => {
            console.log(`üìè [v26] –ü—Ä–∏–º–µ–Ω—è—é —Ä–∞–∑–º–µ—Ä: ${widget.id}`);
            widget.classList.add('draggable');
            
            // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ –≤–∏–¥–∂–µ—Ç–∞
            let defaultWidth = 380;
            let defaultHeight = 320;
            
            // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–æ–≤
            if (widget.id === 'pomodoro-section') {
                defaultWidth = 320;
                defaultHeight = 280;
            } else if (widget.id === 'system-section') {
                defaultWidth = 400;
                defaultHeight = 350;
            } else if (widget.id === 'calendar-section') {
                defaultWidth = 350;
                defaultHeight = 400;
            } else if (widget.id === 'processes-section') {
                defaultWidth = 450;
                defaultHeight = 400;
            } else if (widget.id === 'docker-section') {
                defaultWidth = 450;
                defaultHeight = 350;
            } else if (widget.id === 'ssh-section') {
                defaultWidth = 500;
                defaultHeight = 400;
            }
            
            // –ò–°–ü–û–õ–¨–ó–£–ï–ú –°–û–•–†–ê–ù–ï–ù–ù–´–ï –†–ê–ó–ú–ï–†–´ –ï–°–õ–ò –û–ù–ò –ï–°–¢–¨
            let finalWidth = defaultWidth;
            let finalHeight = defaultHeight;
            
            if (layout[widget.id] && layout[widget.id].width && layout[widget.id].height) {
                finalWidth = Math.max(layout[widget.id].width, defaultWidth);
                finalHeight = Math.max(layout[widget.id].height, defaultHeight);
                console.log(`üìè [v26] –ü—Ä–∏–º–µ–Ω—è—é —Ä–∞–∑–º–µ—Ä: ${widget.id} -> ${finalWidth}px x ${finalHeight}px (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ)`);
            } else {
                console.log(`üìè [v26] –ü—Ä–∏–º–µ–Ω—è—é —Ä–∞–∑–º–µ—Ä: ${widget.id} -> ${finalWidth}px x ${finalHeight}px (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)`);
            }
            
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤–∫–ª—é—á–∞–µ–º resize
            widget.style.resize = 'both';
            widget.style.overflow = 'auto';
            
            // üöÄ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —á–µ—Ä–µ–∑ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
            widget.style.width = finalWidth + 'px';
            widget.style.height = finalHeight + 'px';
            widget.style.minWidth = finalWidth + 'px';
            widget.style.minHeight = finalHeight + 'px';
            
            console.log(`‚úÖ [v26] –†–∞–∑–º–µ—Ä –ø—Ä–∏–º–µ–Ω–µ–Ω: ${widget.id} -> ${widget.style.width} x ${widget.style.height}`);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º—ã—à–∏ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–∞ –≤–∏–¥–∂–µ—Ç–∞
            const header = widget.querySelector('.widget-header');
            if (header) {
                header.style.cursor = 'grab';
                header.addEventListener('mousedown', this.boundHandlers.dragStart);
            }
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å —Ä–µ–∂–∏–º–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –∫ grid
        const grid = document.querySelector('.dashboard-grid');
        if (grid) {
            console.log('üéØ [v26] Grid –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞–π–¥–µ–Ω');
            grid.classList.add('drag-mode');
        } else {
            console.log('‚ùå [v26] Grid –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ù–ï –Ω–∞–π–¥–µ–Ω!');
        }
        
        console.log('‚úÖ [v26] –†–µ–∂–∏–º –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –≤–∫–ª—é—á—ë–Ω');
    }

    disableDragMode() {
        this.isDragMode = false;
        console.log('üöÄ [v26] –í—ã–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è...');
        
        this.widgets.forEach(widget => {
            widget.classList.remove('draggable', 'dragging');
            
            // –û—Ç–∫–ª—é—á–∞–µ–º resize
            widget.style.resize = 'none';
            widget.style.overflow = 'visible';
            
            // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∞–±—Å–æ–ª—é—Ç–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ
            widget.style.position = 'absolute';
            
            // –£–¥–∞–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
            const header = widget.querySelector('.widget-header');
            if (header) {
                header.style.cursor = '';
                header.removeEventListener('mousedown', this.boundHandlers.dragStart);
            }
        });

        const grid = document.querySelector('.dashboard-grid');
        if (grid) {
            grid.classList.remove('drag-mode');
            // –í –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ —Ç–æ–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º block –¥–ª—è –∞–±—Å–æ–ª—é—Ç–Ω–æ–≥–æ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
            grid.style.display = 'block';
        }

        // –£–¥–∞–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –µ—Å–ª–∏ –±—ã–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã
        document.removeEventListener('mousemove', this.boundHandlers.mouseMove);
        document.removeEventListener('mouseup', this.boundHandlers.mouseUp);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–∞–∫–µ—Ç –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ –∏–∑ —Ä–µ–∂–∏–º–∞ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
        this.saveLayout();
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        this.applyLayout();
        
        // üîí –ë–õ–û–ö–ò–†–£–ï–ú –≤—Å–µ –≤–∏–¥–∂–µ—Ç—ã –ø–æ—Å–ª–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        this.lockAllWidgets();
        
        console.log('‚úÖ [v26] –†–µ–∂–∏–º –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è –≤—ã–∫–ª—é—á–µ–Ω');
    }

    handleDragStart(e) {
        e.preventDefault();
        
        this.draggedElement = e.target.closest('.widget');
        if (!this.draggedElement) return;
        
        // –ó–∞–ø–æ–º–∏–Ω–∞–µ–º —Å–º–µ—â–µ–Ω–∏–µ –º—ã—à–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤–∏–¥–∂–µ—Ç–∞
        const rect = this.draggedElement.getBoundingClientRect();
        this.dragOffset = {
            x: e.clientX - rect.left,
            y: e.clientY - rect.top
        };
        
        this.draggedElement.classList.add('dragging');
        this.draggedElement.style.zIndex = '1000';
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        document.addEventListener('mousemove', this.boundHandlers.mouseMove);
        document.addEventListener('mouseup', this.boundHandlers.mouseUp);
        
        // –ú–µ–Ω—è–µ–º –∫—É—Ä—Å–æ—Ä
        document.body.style.cursor = 'grabbing';
        
        console.log(`üéØ –ù–∞—á–∞—Ç–æ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ: ${this.draggedElement.id}`);
    }

    handleMouseMove(e) {
        if (!this.draggedElement) return;
        
        e.preventDefault();
        
        // –í—ã—á–∏—Å–ª—è–µ–º –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
        const gridRect = document.querySelector('.dashboard-grid').getBoundingClientRect();
        const newX = e.clientX - gridRect.left - this.dragOffset.x;
        const newY = e.clientY - gridRect.top - this.dragOffset.y;
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é
        this.draggedElement.style.left = newX + 'px';
        this.draggedElement.style.top = newY + 'px';
    }

    handleMouseUp(e) {
        if (!this.draggedElement) return;
        
        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ —Å–µ—Ç–∫–µ
        this.snapToGrid(this.draggedElement);
        
        // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å—ã –∏ —Å—Ç–∏–ª–∏
        this.draggedElement.classList.remove('dragging');
        this.draggedElement.style.zIndex = '';
        
        // –£–¥–∞–ª—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        document.removeEventListener('mousemove', this.boundHandlers.mouseMove);
        document.removeEventListener('mouseup', this.boundHandlers.mouseUp);
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—É—Ä—Å–æ—Ä
        document.body.style.cursor = '';
        
        console.log(`üéØ –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: ${this.draggedElement.id}`);
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
        this.saveLayout();
        
        this.draggedElement = null;
    }

    snapToGrid(widget) {
        const rect = widget.getBoundingClientRect();
        const gridRect = document.querySelector('.dashboard-grid').getBoundingClientRect();
        
        // –¢–µ–∫—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ grid
        const currentX = rect.left - gridRect.left;
        const currentY = rect.top - gridRect.top;
        
        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –∫ –±–ª–∏–∂–∞–π—à–µ–π —è—á–µ–π–∫–µ —Å–µ—Ç–∫–∏
        const snappedX = Math.round(currentX / this.gridSize.width) * this.gridSize.width + 8; // +8 –¥–ª—è –æ—Ç—Å—Ç—É–ø–∞
        const snappedY = Math.round(currentY / this.gridSize.height) * this.gridSize.height + 8;
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é
        widget.style.left = snappedX + 'px';
        widget.style.top = snappedY + 'px';
        
        console.log(`üéØ –ü—Ä–∏–≤—è–∑–∫–∞ –∫ —Å–µ—Ç–∫–µ: ${widget.id} -> (${snappedX}, ${snappedY})`);
    }

    // ResizeObserver –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω—ã - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–∞—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞/—Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∞

    saveLayout() {
        const layout = {};
        
        this.widgets.forEach(widget => {
            const style = window.getComputedStyle(widget);
            
            // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å
            const width = parseInt(widget.style.width) || parseInt(style.width) || 380;
            const height = parseInt(widget.style.height) || parseInt(style.height) || 320;
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ä–∞–∑–º–µ—Ä—ã —Ä–∞–∑—É–º–Ω—ã–µ
            layout[widget.id] = {
                top: parseInt(widget.style.top) || parseInt(style.top) || 0,
                left: parseInt(widget.style.left) || parseInt(style.left) || 0,
                width: Math.max(width, 200),   // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ 200px
                height: Math.max(height, 150)  // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –≤—ã—Å–æ—Ç–∞ 150px
            };
        });
        
        localStorage.setItem('cyberkitty_dashboard_layout', JSON.stringify(layout));
        console.log('üíæ –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —Ä–∞–∑–º–µ—Ä—ã –≤–∏–¥–∂–µ—Ç–æ–≤ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã', layout);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        this.showNotification('–ú–∞–∫–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω! üíæ');
    }

    loadLayout() {
        const savedLayout = localStorage.getItem('cyberkitty_dashboard_layout');
        
        if (savedLayout) {
            try {
                const layout = JSON.parse(savedLayout);
                console.log('üì• [v26] –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –º–∞–∫–µ—Ç', layout);
                
                Object.keys(layout).forEach(widgetId => {
                    const widget = document.getElementById(widgetId);
                    if (widget && layout[widgetId]) {
                        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é
                        widget.style.top = layout[widgetId].top + 'px';
                        widget.style.left = layout[widgetId].left + 'px';
                        
                        // üöÄ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
                        if (layout[widgetId].width && layout[widgetId].width > 200) {
                            widget.style.width = layout[widgetId].width + 'px';
                            widget.style.minWidth = layout[widgetId].width + 'px';
                        }
                        if (layout[widgetId].height && layout[widgetId].height > 150) {
                            widget.style.height = layout[widgetId].height + 'px';
                            widget.style.minHeight = layout[widgetId].height + 'px';
                        }
                        
                        console.log(`üìè [v26] –ü—Ä–∏–º–µ–Ω—è—é —Ä–∞–∑–º–µ—Ä: ${widgetId} -> ${widget.style.width} x ${widget.style.height} –≤ –ø–æ–∑–∏—Ü–∏–∏ (${widget.style.left}, ${widget.style.top})`);
                    }
                });
                
                this.showNotification('–ú–∞–∫–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω! üì•');
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞–∫–µ—Ç–∞:', error);
            }
        } else {
            console.log('‚ÑπÔ∏è [v26] –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –º–∞–∫–µ—Ç–∞ –Ω–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–∞–∑–º–µ—Ä—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
        }
    }

    applyLayout() {
        const savedLayout = localStorage.getItem('cyberkitty_dashboard_layout');
        
        if (savedLayout) {
            try {
                const layout = JSON.parse(savedLayout);
                console.log('üéØ [v26] –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π –º–∞–∫–µ—Ç –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ', layout);
                
                Object.keys(layout).forEach(widgetId => {
                    const widget = document.getElementById(widgetId);
                    if (widget && layout[widgetId]) {
                        // –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏
                        widget.style.position = 'absolute';
                        widget.style.top = layout[widgetId].top + 'px';
                        widget.style.left = layout[widgetId].left + 'px';
                        widget.style.width = layout[widgetId].width + 'px';
                        widget.style.height = layout[widgetId].height + 'px';
                        
                        // –£–±–∏—Ä–∞–µ–º grid –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
                        widget.style.gridColumn = 'unset';
                        widget.style.gridRow = 'unset';
                        
                        console.log(`üéØ [v26] –ü—Ä–∏–º–µ–Ω–µ–Ω—ã –ø–æ–∑–∏—Ü–∏–∏: ${widgetId} -> (${layout[widgetId].left}, ${layout[widgetId].top}) —Ä–∞–∑–º–µ—Ä ${layout[widgetId].width}x${layout[widgetId].height}`);
                    }
                });
                
                console.log('‚úÖ [v26] –ú–∞–∫–µ—Ç –ø—Ä–∏–º–µ–Ω—ë–Ω –≤ –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ');
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –º–∞–∫–µ—Ç–∞:', error);
            }
        } else {
            console.log('‚ÑπÔ∏è [v26] –ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –º–∞–∫–µ—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º CSS Grid');
        }
    }

    resetLayout() {
        console.log('üîÑ –°–±—Ä–æ—Å —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É');
        
        this.updateWidgetsList();
        
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏
        Object.keys(this.defaultPositions).forEach(widgetId => {
            const widget = document.getElementById(widgetId);
            if (widget) {
                const pos = this.defaultPositions[widgetId];
                widget.style.top = pos.top + 'px';
                widget.style.left = pos.left + 'px';
                widget.classList.add('moving');
                
                setTimeout(() => {
                    widget.classList.remove('moving');
                }, 300);
            }
        });
        
        // –£–¥–∞–ª—è–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–µ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ
        localStorage.removeItem('cyberkitty_dashboard_layout');
        this.showNotification('–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–±—Ä–æ—à–µ–Ω–æ! üîÑ');
    }

    showLayoutControls() {
        document.getElementById('layout-controls')?.classList.add('show');
    }

    hideLayoutControls() {
        // –°–∫—Ä—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ –≤ —Ä–µ–∂–∏–º–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏—è
        if (!this.isDragMode) {
            document.getElementById('layout-controls')?.classList.remove('show');
        }
    }

    showNotification(message) {
        // –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        const notification = document.createElement('div');
        notification.style.cssText = `
            position: fixed;
            top: 80px;
            right: 16px;
            background: var(--cyberkitty-bg-light);
            border: 1px solid var(--cyberkitty-blue);
            border-radius: var(--border-radius);
            padding: 12px 16px;
            color: var(--cyberkitty-fg);
            font-size: var(--font-size-small);
            z-index: 1002;
            opacity: 0;
            transform: translateX(100%);
            transition: all 0.3s ease;
        `;
        notification.textContent = message;
        
        document.body.appendChild(notification);
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        setTimeout(() => {
            notification.style.opacity = '1';
            notification.style.transform = 'translateX(0)';
        }, 100);
        
        // –£–¥–∞–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
            notification.style.opacity = '0';
            notification.style.transform = 'translateX(100%)';
            setTimeout(() => document.body.removeChild(notification), 300);
        }, 3000);
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
if (typeof window !== 'undefined') {
    function initLayoutManager() {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º LayoutManager');
        window.layoutManager = new LayoutManager();
        console.log('‚úÖ LayoutManager –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
    }
    
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initLayoutManager);
    } else {
        // DOM —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω
        initLayoutManager();
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –º–æ–¥—É–ª—å–Ω—ã—Ö —Å–∏—Å—Ç–µ–º
if (typeof module !== 'undefined' && module.exports) {
    module.exports = LayoutManager;
} 